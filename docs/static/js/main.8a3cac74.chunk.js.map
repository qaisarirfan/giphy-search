{"version":3,"sources":["components/Items/Items.module.css","components/Search/Search.module.css","reducers/search/selectors.ts","components/Items/index.tsx","components/Loading/index.tsx","components/Search/index.tsx","components/Error/index.tsx","utils.ts","reducers/search/actionsType.ts","reducers/search/actions.ts","App.tsx","reportWebVitals.ts","reducers/search/index.ts","sagas/index.ts","store.ts","index.tsx"],"names":["module","exports","selectNews","state","entities","selectLoader","loading","selectCurrentPage","currentPage","selectError","error","NewsItem","defaultVal","id","title","preview","img","useState","showPopup","setShowPopup","selected","setSelected","useSelector","ids","data","closePopup","useEffect","window","addEventListener","e","key","list","map","type","className","styles","masonryBrick","onClick","openPopup","style","backgroundImage","masonry","layer","popup","close","content","src","alt","Laoading","textAlign","Search","setValue","onSubmit","val","inputWrapper","placeholder","onChange","value","target","name","input","onKeyDown","button","Error","createActionName","reducerName","actionName","appName","GET","RECEIVED","ERROR","getNews","query","newSearch","payload","App","setQuery","dispatch","useDispatch","fetchNews","React","useCallback","onYReachEnd","throttle","Items","Loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","actionWatcher","rootSaga","API_KEY","select","prevData","prevCurrentPage","params","qs","stringify","api_key","q","limit","offset","rating","lang","fetch","response","json","get","Object","values","reduce","obj","row","set","images","preview_gif","url","original","uniq","put","message","takeLatest","all","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducers","applyMiddleware","logger","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a3cac74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"masonry\":\"Items_masonry__YfTJV\",\"masonryBrick\":\"Items_masonryBrick__3N9ft\",\"popup\":\"Items_popup__3cefG\",\"close\":\"Items_close__3O3HU\",\"content\":\"Items_content__IIR1z\",\"layer\":\"Items_layer__1f4c3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Search_inputWrapper__-SG6E\",\"input\":\"Search_input__yx45c\",\"button\":\"Search_button__dnbUm\"};","import { searchState } from \"./types\"\n\nexport const selectNews = (state: searchState) => state.entities\nexport const selectLoader = (state: searchState) => state.loading\nexport const selectCurrentPage = (state: searchState) => state.currentPage\nexport const selectError = (state: searchState) => state.error\n","import React, { useEffect, useState } from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { selectNews } from \"../../reducers/search/selectors\"\nimport { news } from \"../../reducers/search/types\"\nimport styles from \"./Items.module.css\"\n\nconst NewsItem = () => {\n  const defaultVal = {\n    id: \"\",\n    title: \"\",\n    preview: \"\",\n    img: \"\",\n  }\n  const [showPopup, setShowPopup] = useState(false)\n  const [selected, setSelected] = useState<news>(defaultVal)\n  const { ids, data }: any = useSelector(selectNews)\n\n  const openPopup = (id: string) => {\n    setShowPopup(true)\n    setSelected(data[id])\n  }\n\n  const closePopup = () => {\n    setShowPopup(false)\n    setSelected(defaultVal)\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\") {\n        closePopup()\n      }\n    })\n  }, [])\n\n  const list = ids.map((id: string) => {\n    const { img } = data[id]\n    return (\n      <button\n        type=\"button\"\n        className={styles.masonryBrick}\n        key={id}\n        onClick={() => openPopup(id)}>\n        <span style={{ backgroundImage: `url(${img})` }} />\n      </button>\n    )\n  })\n  return (\n    <>\n      <div className={styles.masonry}>{list}</div>\n      {showPopup ? (\n        <>\n          <div className={styles.layer} />\n          <div className={styles.popup}>\n            <button type=\"button\" className={styles.close} onClick={closePopup}>\n              &times;\n            </button>\n            {selected.preview && (\n              <div className={styles.content}>\n                {selected.title && <h3>{selected.title}</h3>}\n                <img src={selected.preview} alt=\"\" />\n              </div>\n            )}\n          </div>\n        </>\n      ) : null}\n    </>\n  )\n}\n\nexport default NewsItem\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { selectLoader } from \"../../reducers/search/selectors\"\n\nconst Laoading = () => {\n  const loading = useSelector(selectLoader)\n\n  return loading ? (\n    <div style={{ textAlign: \"center\" }}>\n      <p>Loading...</p>\n    </div>\n  ) : null\n}\n\nexport default Laoading\n","import React from \"react\"\nimport styles from \"./Search.module.css\"\n\ntype Props = {\n  setValue: Function\n  onSubmit: Function\n  val: string\n}\n\nconst Search: React.FC<Props> = ({ setValue, onSubmit, val }) => {\n  return (\n    <div className={styles.inputWrapper}>\n      <input\n        type=\"text\"\n        placeholder=\"\"\n        onChange={({ target: { value } }) => setValue(value)}\n        value={val}\n        name=\"search\"\n        className={styles.input}\n        onKeyDown={(e) => {\n          if (e.key === \"Enter\") {\n            onSubmit()\n          }\n        }}\n      />\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onSubmit()}>\n        Search\n      </button>\n    </div>\n  )\n}\n\nexport default Search\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { selectError } from \"../../reducers/search/selectors\"\n\nconst Error = () => {\n  const error = useSelector(selectError)\n\n  return error ? (\n    <div style={{ textAlign: \"center\" }}>\n      <p>{error}</p>\n    </div>\n  ) : null\n}\n\nexport default Error\n","import { name as appName } from \"../package.json\"\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createActionName = (\n  reducerName: string,\n  actionName: string\n): string => {\n  return `app/${appName}/${reducerName}/${actionName}`\n}\n","import { createActionName } from \"../../utils\"\n\nexport const reducerName = \"search\"\n\nexport const GET = createActionName(reducerName, \"GET\")\nexport const RECEIVED = createActionName(reducerName, \"RECEIVED\")\nexport const ERROR = createActionName(reducerName, \"ERROR\")\n","import { GET } from \"./actionsType\"\n\nconst getNews = (query: string = \"\", newSearch: boolean = false) => ({\n  type: GET,\n  payload: {\n    query,\n    newSearch,\n  },\n})\n\nexport default getNews\n","import React, { useEffect, useState } from \"react\"\nimport \"./App.css\"\nimport { useDispatch } from \"react-redux\"\nimport { Dispatch } from \"redux\"\nimport { throttle } from \"lodash\"\n\nimport PerfectScrollbar from \"react-perfect-scrollbar\"\nimport Items from \"./components/Items\"\nimport Loading from \"./components/Loading\"\nimport Search from \"./components/Search\"\nimport Error from \"./components/Error\"\nimport getNews from \"./reducers/search/actions\"\n\nfunction App() {\n  const [query, setQuery] = useState(\"\")\n\n  const dispatch: Dispatch<any> = useDispatch()\n\n  const fetchNews = React.useCallback(\n    (val: string, newSearch: boolean) => dispatch(getNews(val, newSearch)),\n    [dispatch]\n  )\n\n  const handleChange = () => {\n    fetchNews(query, true)\n  }\n\n  useEffect(() => {\n    fetchNews(query, false)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Search setValue={setQuery} onSubmit={handleChange} val={query} />\n      <PerfectScrollbar\n        className=\"PerfectScrollbar\"\n        onYReachEnd={throttle(() => {\n          fetchNews(query, false)\n        }, 1500)}>\n        <Items />\n        <Loading />\n        <Error />\n      </PerfectScrollbar>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { GET, RECEIVED, ERROR } from \"./actionsType\"\nimport { ActionTypes, searchState } from \"./types\"\n\nconst initialState: searchState = {\n  loading: false,\n  entities: {\n    ids: [],\n    data: {},\n  },\n  currentPage: -25,\n  error: \"\",\n}\n\nconst reducer = (state = initialState, action: ActionTypes) => {\n  switch (action.type) {\n    case GET:\n      return {\n        ...state,\n        loading: true,\n        error: \"\",\n      }\n    case RECEIVED:\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n        error: \"\",\n      }\n    case ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","/* eslint-disable no-param-reassign */\nimport { put, takeLatest, all, select } from \"redux-saga/effects\"\nimport { uniq, set, get } from \"lodash\"\nimport qs from \"qs\"\nimport { ERROR, GET, RECEIVED } from \"../reducers/search/actionsType\"\nimport { selectCurrentPage, selectNews } from \"../reducers/search/selectors\"\nimport { Entities, Get } from \"../reducers/search/types\"\n\nfunction* fetchNews(action: Get) {\n  const API_KEY = \"v0zFcKCW00lCoAVsC1mVdXpLm8VcmHdZ\"\n  const {\n    payload: { query, newSearch },\n  } = action\n  const prevData = yield select(selectNews)\n  const prevCurrentPage = yield select(selectCurrentPage)\n  const params = qs.stringify({\n    api_key: API_KEY,\n    q: query || \"city\",\n    limit: 25,\n    offset: newSearch ? 0 : prevCurrentPage + 25,\n    rating: \"g\",\n    lang: \"en\",\n  })\n\n  try {\n    const json = yield fetch(\n      `https://api.giphy.com/v1/gifs/search?${params}`\n    ).then((response) => response.json())\n    const currentPage = get(json, \"pagination.offset\", 0)\n\n    // redux state normalization\n    const entities = Object.values(json.data).reduce((obj: any, row: any) => {\n      obj.ids = [...(obj.ids || []), row.id]\n      set(obj, `data[${row.id}]`, {\n        id: row?.id,\n        title: row?.title,\n        img: row?.images?.preview_gif?.url,\n        preview: row?.images?.original?.url,\n      })\n      return obj\n    }, {}) as Entities\n\n    let ids = [...uniq([...prevData.ids, ...entities?.ids])]\n    let data = { ...prevData.data, ...entities?.data }\n    if (newSearch) {\n      ids = [...entities?.ids]\n      data = { ...entities?.data }\n    }\n    yield put({\n      type: RECEIVED,\n      payload: {\n        entities: {\n          ids,\n          data,\n        },\n        currentPage,\n      },\n    })\n  } catch (error) {\n    yield put({\n      type: ERROR,\n      payload: error.message,\n    })\n  }\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(GET, fetchNews)\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()])\n}\n","import { createStore, applyMiddleware } from \"redux\"\nimport createSagaMiddleware from \"redux-saga\"\nimport { logger } from \"redux-logger\"\n\nimport rootReducers from \"./reducers/search\"\nimport rootSaga from \"./sagas\"\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(rootReducers, applyMiddleware(sagaMiddleware, logger))\n\nsagaMiddleware.run(rootSaga)\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport store from \"./store\"\nimport \"isomorphic-fetch\"\nimport \"react-perfect-scrollbar/dist/css/styles.css\"\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}